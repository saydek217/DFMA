# Ultralytics 🚀 AGPL-3.0 License - https://ultralytics.com/license

# Ultralytics YOLO11 object detection model with P3/8 - P5/32 outputs
# Model docs: https://docs.ultralytics.com/models/yolo11
# Task docs: https://docs.ultralytics.com/tasks/detect

# Parameters
nc: 80 # number of classes
scales: # model compound scaling constants, i.e. 'model=yolo11n.yaml' will call yolo11.yaml with scale 'n'
  # [depth, width, max_channels]
  n: [0.50, 0.25, 1024] # summary: 181 layers, 2624080 parameters, 2624064 gradients, 6.6 GFLOPs
  s: [0.50, 0.50, 1024] # summary: 181 layers, 9458752 parameters, 9458736 gradients, 21.7 GFLOPs
  m: [0.50, 1.00, 512] # summary: 231 layers, 20114688 parameters, 20114672 gradients, 68.5 GFLOPs
  l: [1.00, 1.00, 512] # summary: 357 layers, 25372160 parameters, 25372144 gradients, 87.6 GFLOPs
  x: [1.00, 1.50, 512] # summary: 357 layers, 56966176 parameters, 56966160 gradients, 196.0 GFLOPs

# YOLO11n backbone
backbone:
  # [from, repeats, module, args]
  - [-1, 1, Conv, [64, 3, 2]]            # 0-P1/2: out_channels=64
  - [-1, 1, Conv, [128, 3, 2]]           # 1-P2/4: out_channels=128
  - [-1, 2, C3k2, [256, False, 0.25]]    # output=256
  - [-1, 1, DFMAatt, [64, 64, 2, True, 2.0, 4, 0.5]] # input/output:256->256 ✔️

  - [-1, 1, Conv, [256, 3, 2]]           # 3-P3/8: output=256
  - [-1, 2, C3k2, [512, False, 0.25]]    # output=512
  #- [-1, 1, DFMAatt, [128, 128, 2, True, 2.0, 4, 0.5]] # input/output:512->512 ✔️

  - [-1, 1, Conv, [512, 3, 2]]           # 5-P4/16: output=512
  - [-1, 2, C3k2, [512, True]]           # stays 512
  #- [-1, 1, DFMAatt, [128, 128, 2, True, 2.0, 4, 0.5]] # input/output:512->512 ✔️

  - [-1, 1, Conv, [1024, 3, 2]]          # 7-P5/32: output=1024
  - [-1, 2, C3k2, [1024, True]]          # stays 1024
  - [-1, 1, DFMAatt, [256, 256, 2, True, 2.0, 4, 0.5]] # input/output:1024->1024 ✔️

  - [-1, 1, SPPF, [1024, 5]]             # 9: output=1024
  - [-1, 2, C2PSA, [1024]]               # 14: output=1024

head:
  - [-1, 1, nn.Upsample, [None, 2, "nearest"]]       # output=1024
  - [[-1, 7], 1, Concat, [1]]                        # concat: 1024 + 512 = 1536
  - [-1, 2, C3k2, [512, False]]                      # output=512

  - [-1, 1, nn.Upsample, [None, 2, "nearest"]]       # output=512
  - [[-1, 5], 1, Concat, [1]]                        # concat: 512 + 512 = 1024
  - [-1, 2, C3k2, [256, False]]                      # output=256
  - [-1, 1, DFMAatt, [64, 64, 2, True, 2.0, 4, 0.5]] # input/output:256->256 ✔️

  - [-1, 1, Conv, [256, 3, 2]]                       # output=256
  - [[-1, 15], 1, Concat, [1]]                       # concat: 256 + 512 = 768
  - [-1, 2, C3k2, [512, False]]                      # output=512
  - [-1, 1, DFMAatt, [128, 128, 2, True, 2.0, 4, 0.5]] # input/output:512->512 ✔️

  - [-1, 1, Conv, [512, 3, 2]]                       # output=512
  - [[-1, 12], 1, Concat, [1]]                       # concat: 512 + 1024 = 1536
  - [-1, 2, C3k2, [1024, True]]                      # output=1024
  #- [-1, 1, DFMAatt, [256, 256, 2, True, 2.0, 4, 0.5]] # input/output:1024->1024 ✔️

  - [[19, 23, 26], 1, Detect, [nc]]

